@using System.Collections.Generic
@using MetricDashboard.Data.Models
@using Radzen.Blazor

<RadzenRadialGauge Style="@Style">
    <RadzenRadialGaugeScale StartAngle="-150" EndAngle="150" Step="@Settings.Step" Min="@Settings.Start"
                            Max="@Settings.End" TickPosition=GaugeTickPosition.Inside>
        <RadzenRadialGaugeScalePointer Value="@PointerValue" Length="0.6" ShowValue="true">
            <Template Context="pointer">
                <h4>
                    @PointerValue.ToString("N1") <sub>@Settings.PointerUnits</sub>
                </h4>
            </Template>
        </RadzenRadialGaugeScalePointer>
        @{
            foreach (var colorRange in Settings.ColorRanges)
            {
                <RadzenRadialGaugeScaleRange From="@colorRange.From" To="@colorRange.To" Fill="@colorRange.Color.ToString()" />
            }
        }
    </RadzenRadialGaugeScale>
</RadzenRadialGauge>

@code {
    //TODO: implement scoring overrides (onboarding time yellow is worth 7 or smth.)
    [Parameter]
    public RadialSettings Settings { get; set; }
    [Parameter]
    public string Style { get; set; }
    [Parameter]
    public double PointerValue { get; set; }
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Settings ??= new();
    }
}
